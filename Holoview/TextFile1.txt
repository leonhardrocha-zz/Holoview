

    osgGA::KeySwitchMatrixManipulator* keyManipulator = static_cast<osgGA::KeySwitchMatrixManipulator*>(dualViewer->getView(0)->getCameraManipulator());
    osgGA::CameraManipulator* cameraManipulator = keyManipulator->getCurrentMatrixManipulator();
    const std::string name = cameraManipulator->getName();

    if (name == "Tracker") 
    {
        osgGA::TrackerManipulator* trackerManipulator = static_cast<osgGA::TrackerManipulator*>(cameraManipulator);
        Pose avatarPose  = results->GetAvatarPose();

 
        osg::Viewer::View* mainView = dualViewer->getView(0);
        osg::Vec3 new_center(dualViewer->GetVirtualCenter());

    }
    /*m.postMultTranslate(osg::Vec3(0,0,-new_center.z()));*/
    /*osg::Quat rotation = getRotation(new_eye, new_center, osg::Vec3(0,1,0)).getRotate();
    m.preMultRotate(rotation);*/
    /*trackerManipulator->setByMatrix(m);*/

    //osg::Matrix pm = m_projectionMatrix;
    //osg::Matrix r = getRotation(eyePosition, m_virtualCenter, osg::Vec3(0,1,0));
    //pm.setTrans(0,0,0);
    //pm.postMultRotate(r.getRotate());
    //pm.setTrans(eyePosition - m_virtualCenter);
    //osg::Camera* camera = getView(0)->getCamera();
    //camera->setProjectionMatrix(pm);